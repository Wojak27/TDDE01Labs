getwd()
setwd("~/Google Drive/skola/TDDE01/Labs/Lab1")
my_data = read.table(file = "spambase",
sep = "\t", header=TRUE)
my_data = read.table(file = "spambase.xlsx",
sep = "\t", header=TRUE)
my_data = read.table(file = "spambase.xlsx",
sep = ",", header=TRUE)
library(xlsx)
my_data = read.xlsx("spambase.xlsx",
sheetName="spambase_data")
install.packages("xlsx")
library(xlsx)
my_data = read.xlsx("spambase.xlsx",
sheetName="spambase_data")
library(xlsx)
my_data = read.xlsx("spambase.xlsx",
sheetName="spambase_data")
library(xlsx)
my_data = read.xlsx("spambase.xlsx", 1)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(xlsx)
my_data = read.xlsx("spambase.xlsx", 1)
install.packages("readxl")
library(xlsx)
my_data = read.xlsx("spambase.xlsx", 1)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(xlsx)
my_data = read.xlsx("spambase.xlsx", 1)
library(xlsx)
my_data = readxl::read_excel(path = "spambase.xlsx", 1)
library(xlsx)
data = readxl::read_excel(path = "spambase.xlsx", 1)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
library(xlsx)
data = readxl::read_excel(path = "spambase.xlsx", 1)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
fit = glm(Y~1/(1+e^(-x)),data=train,family=binomial())
summary(fit)
library(xlsx)
data = readxl::read_excel(path = "spambase.xlsx", 1)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
fit <- glm(Y~1/(1+e^(-x)),data=train,family=binomial())
summary(fit)
library(xlsx)
data = readxl::read_excel(path = "spambase.xlsx", 1)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
fit <- glm(Y~1/(1+e^(-x)),data=train,family=binomial())
summary(fit)
library(xlsx)
data = readxl::read_excel(path = "spambase.xlsx", 1)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
fit <- as.glm(Y~1/(1+e^(-x)),data=train,family=binomial())
summary(fit)
fit <- glm(Y~1/(1+e^(-x)),data=train,family=binomial())
fit <- glm(Y~1/(1+e^(-n)),data=train,family=binomial())
fit <- glm(Y~1/(1+e^-n),data=train,family=binomial())
fit <- glm(Y~I(1/(1+e^(-n))),data=train,family=binomial())
Y=1:1370
summary(fit)
library(xlsx)
data = readxl::read_excel(path = "spambase.xlsx", 1)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
Y=1:1370
fit <- glm(Y~I(1/(1+e^(-n))),data=train,family=binomial())
summary(fit)
library(xlsx)
data = readxl::read_excel(path = "spambase.xlsx", 1)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
Y=1:1370
fit <- glm(Y~1/(1+exp(-x)),data=train,family=binomial())
summary(fit)
fit <- glm(Y~1/(1+exp(-n)),data=train,family=binomial())
library(xlsx)
data = readxl::read_excel(path = "spambase.xlsx", 1)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
Y=1:1370
fit <- glm(Y~1/(1+exp(-n)),data=train,family=binomial())
summary(fit)
library(xlsx)
data = readxl::read_excel(path = "spambase.xlsx", 1)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
Y=1:1370
fit <- glm(Y~1/(1+exp(-n)),data=data,family=binomial())
summary(fit)
install.packages("Amelia")
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
missmap(data, main = "Missing values vs observed")
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
Y=1:1370
fit <- glm(Y~1/(1+exp(-n)),data=train,family=binomial())
summary(fit)
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
Y=1:1370
fit <- glm(Y~.,data=train,family=binomial())
summary(fit)
library(xlsx)
library(Amelia)
#data = readxl::read_excel(path = "spambase.xlsx", 1)
missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
Y=1:1370
fit <- glm(Y~.,data=train,family=binomial())
summary(fit)
#datavariable=read.table(file= file.choose(), header = T, sep=" ", na.strings=" ", stringsAsFactors=F)
library(xlsx)
library(Amelia)
#data = readxl::read_excel(path = "spambase.xlsx", 1)
missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
Y=1:1370
fit <- glm(Y~.,family=binomial(link='logit'),data=train)
summary(fit)
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
#logistic regression tutorial in r
#https://datascienceplus.com/perform-logistic-regression-in-r/
#for plotting missing values in the dataset
#library(Amelia)
#missmap(training.data.raw, main = "Missing values vs observed")
#datavariable=read.table(file= file.choose(), header = T, sep=" ", na.strings=" ", stringsAsFactors=F)
library(xlsx)
library(Amelia)
#data = readxl::read_excel(path = "spambase.xlsx", 1)
missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(y~.,family=binomial(link='logit'),data=train)
summary(fit)
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
#logistic regression tutorial in r
#https://datascienceplus.com/perform-logistic-regression-in-r/
#for plotting missing values in the dataset
#library(Amelia)
#missmap(training.data.raw, main = "Missing values vs observed")
#datavariable=read.table(file= file.choose(), header = T, sep=" ", na.strings=" ", stringsAsFactors=F)
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
#missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(y~.,family=binomial(link='logit'),data=train)
summary(fit)
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
#logistic regression tutorial in r
#https://datascienceplus.com/perform-logistic-regression-in-r/
#for plotting missing values in the dataset
#library(Amelia)
#missmap(training.data.raw, main = "Missing values vs observed")
#datavariable=read.table(file= file.choose(), header = T, sep=" ", na.strings=" ", stringsAsFactors=F)
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
#missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(Spam~.,family=binomial(link='logit'),data=train)
summary(fit)
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
#logistic regression tutorial in r
#https://datascienceplus.com/perform-logistic-regression-in-r/
#for plotting missing values in the dataset
#library(Amelia)
#missmap(training.data.raw, main = "Missing values vs observed")
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
#missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(Spam~.,family=binomial(link='logit'),data=train)
summary(fit)
results = predict(fit,newdata=subset(test,type='response')
results = ifelse(results > 0.5,1,0)
misClasificError = mean(results != test$Spam)
print(paste('Accuracy',1-misClasificError))
#datavariable=read.table(file= file.choose(), header = T, sep=" ", na.strings=" ", stringsAsFactors=F)
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
#missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(Spam~.,family=binomial(link='logit'),data=train)
summary(fit)
results = predict(fit,test)
results = ifelse(results > 0.5,1,0)
misClasificError = mean(results != test$Spam)
print(paste('Accuracy',1-misClasificError))
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
#logistic regression tutorial in r
#https://datascienceplus.com/perform-logistic-regression-in-r/
#for plotting missing values in the dataset
#library(Amelia)
#missmap(training.data.raw, main = "Missing values vs observed")
#datavariable=read.table(file= file.choose(), header = T, sep=" ", na.strings=" ", stringsAsFactors=F)
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
#missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(Spam~.,family=binomial(link='logit'),data=train)
summary(fit)
results = predict(fit,test)
results = ifelse(results > 0.5,1,0)
misClasificError = mean(results != test$Spam)
table(fit, results)
print(paste('Accuracy',1-misClasificError))
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
#logistic regression tutorial in r
#https://datascienceplus.com/perform-logistic-regression-in-r/
#for plotting missing values in the dataset
#library(Amelia)
#missmap(training.data.raw, main = "Missing values vs observed")
#datavariable=read.table(file= file.choose(), header = T, sep=" ", na.strings=" ", stringsAsFactors=F)
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
#missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(Spam~.,family=binomial(link='logit'),data=train)
summary(fit)
results = predict(fit,test)
results = ifelse(results > 0.5,1,0)
misClasificError = mean(results != test$Spam)
table(results, fit)
print(paste('Accuracy',1-misClasificError))
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
#logistic regression tutorial in r
#https://datascienceplus.com/perform-logistic-regression-in-r/
#for plotting missing values in the dataset
#library(Amelia)
#missmap(training.data.raw, main = "Missing values vs observed")
#datavariable=read.table(file= file.choose(), header = T, sep=" ", na.strings=" ", stringsAsFactors=F)
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
#missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(Spam~.,family=binomial(link='logit'),data=train)
summary(fit)
results = predict(fit,test)
results = ifelse(results > 0.5,1,0)
misClasificError = mean(results != test$Spam)
table(results, test)
print(paste('Accuracy',1-misClasificError))
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
#logistic regression tutorial in r
#https://datascienceplus.com/perform-logistic-regression-in-r/
#for plotting missing values in the dataset
#library(Amelia)
#missmap(training.data.raw, main = "Missing values vs observed")
#datavariable=read.table(file= file.choose(), header = T, sep=" ", na.strings=" ", stringsAsFactors=F)
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
#missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(Spam~.,family=binomial(link='logit'),data=train)
summary(fit)
results = predict(fit,test)
results = ifelse(results > 0.5,1,0)
misClasificError = mean(results != test$Spam)
table(results, test$Spam)
print(paste('Accuracy',1-misClasificError))
#logistic regression with glm() and predict()
#logistic regression vs linear regression
#https://stackoverflow.com/questions/12146914/what-is-the-difference-between-linear-regression-and-logistic-regression
#logistic regression tutorial in r
#https://datascienceplus.com/perform-logistic-regression-in-r/
#for plotting missing values in the dataset
#library(Amelia)
#missmap(training.data.raw, main = "Missing values vs observed")
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
#missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(Spam~.,family=binomial(link='logit'),data=train)
summary(fit)
results = predict(fit,test)
results = ifelse(results > 0.5,1,0)
misClasificError = mean(results != test$Spam)
table(results, test$Spam)
print(paste('Accuracy',1-misClasificError))
plot(spam~., data=data, col="red4")
lines(spam~., test, col="green4", lwd=2)
#datavariable=read.table(file= file.choose(), header = T, sep=" ", na.strings=" ", stringsAsFactors=F)
library(xlsx)
library(Amelia)
data = readxl::read_excel(path = "spambase.xlsx", 1)
#missmap(data, main = "Missing values vs observed") #for plotting missing data
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
#splitting data into training data and test data
train=data[id,]
test=data[-id,]
y=1:1370
fit <- glm(Spam~.,family=binomial(link='logit'),data=train)
summary(fit)
results = predict(fit,test)
results = ifelse(results > 0.5,1,0)
misClasificError = mean(results != test$Spam)
table(results, test$Spam)
print(paste('Accuracy',1-misClasificError))
plot(Spam~., data=data, col="red4")
summary(fit)
results = predict(fit,test)
results = ifelse(results > 0.5,1,0)
misClasificError = mean(results != test$Spam)
table(results, test$Spam)
print(paste('Accuracy',1-misClasificError))
plot(Spam~., data=my_data, col="red4")
summary(fit)
results = predict(fit,test)
#results = ifelse(results > 0.5,1,0) #Assignment 1.2
results = ifelse(results > 0.9,1,0) #Assignment 1.3
misClasificError = mean(results != test$Spam)
table(results, test$Spam)
print(paste('Accuracy',1-misClasificError))
plot(Spam~., data=my_data, col="red4")
summary(fit)
results = predict(fit,test)
results = ifelse(results > 0.5,1,0) #Assignment 1.2
#results = ifelse(results > 0.9,1,0) #Assignment 1.3
misClasificError = mean(results != test$Spam)
table(results, test$Spam)
print(paste('Accuracy',1-misClasificError))
plot(Spam~., data=my_data, col="red4")
